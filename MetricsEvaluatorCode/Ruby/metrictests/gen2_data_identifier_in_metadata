#!/home/mark_moby_wilkinson/.rvm/rubies/ruby-2.5.1/bin/ruby
require_relative 'fair_metrics_utilities'
require 'cgi'
require 'json'
require 'uri'
require 'rdf'
require 'rdf/turtle'
require 'sparql'

debug = false

def testGUID
	
	guid = @swagger.testedGUID
	
	metadata = Utils::resolveit(guid)  # this is where the magic happens!

	metadata.comments.each do |c|
		@swagger.addComment(c)
	end

	if metadata.guidtype == "unknown"
		@swagger.addComment("  The identifier #{guid} did not match any known identification system (tested inchi, doi, handle, uri) and therefore did not pass this metric.  If you think this is an error, please contact the FAIR Metrics group (http://fairmetrics.org).")
		@swagger.score = 0
		return @swagger.createEvaluationResponse
	end
	
	hash = metadata.hash
	
	properties = Utils::deep_dive_properties(hash)

	properties.each do |keyval|
		key, value = nil, nil
		(key, value) = keyval;
		key = key.to_s
		if key =~ /codeRepository/
			@swagger.addComment "found 'codeRepository' in metadata.  "
			@swagger.score = 1
		elsif key =~ /mainEntity/
			@swagger.addComment "found schema 'mainEntity' in metadata.  "
			@swagger.score = 1
		elsif key =~ /primaryTopic/
			@swagger.addComment "found 'primaryTopic' in metadata.  "
			@swagger.score = 1
		elsif key =~ /is-about/ or key =~ /IAO:0000136/ or key =~ /IAO_0000136/
			@swagger.addComment "found Information Artifact Ontology 'is-about' in metadata.  "
			@swagger.score = 1
		elsif key =~ /000332/ or key =~ /SIO:0000136/
			@swagger.addComment "found SIO is about in metadata.  "
			@swagger.score = 1
		end
	end

	g = metadata.graph
	if @swagger.debug
		g.each {|s| puts s.subject.to_s + "\t" + s.predicate.to_s + "\t" + s.object.to_s + "\n"}
	end
	
	if g.size > 0  # have we found anything yet?
		query = SPARQL.parse("select ?o where {?s <http://semanticscience.org/resource/is-about> ?o}")
		results = query.execute(g)
		if results.any?
			@swagger.score = 1
			@swagger.addComment "found identifier #{results.first[:o]} using SIO. "
		end

		query = SPARQL.parse("select ?o where {?s <http://semanticscience.org/resource/SIO_000332> ?o}")
		results = query.execute(g)
		if  results.any?
			@swagger.score = 1
			@swagger.addComment "found identifier #{results.first[:o]} using SIO. "
		end


		query = SPARQL.parse("select ?o where {?s <http://schema.org/mainEntity> ?o}")
		results = query.execute(g)
		if  results.any?
			@swagger.score = 1
			@swagger.addComment "found identifier #{results.first[:o]} using Schema.org. "
		end


		query = SPARQL.parse("select ?o where {?s <http://purl.obolibrary.org/obo/IAO_0000136> ?o}")
		results = query.execute(g)
		if  results.any?
			@swagger.score = 1
			@swagger.addComment "found identifier #{results.first[:o]} using IAO. "
		end

		
		query = SPARQL.parse("select ?o where {?s <http://schema.org/codeRepository> ?o}")
		results = query.execute(g)
		if  results.any?
			@swagger.score = 1
			@swagger.addComment "found identifier #{results.first[:o]} using schema.org. "
		end
		
		if @swagger.score == 0
			@swagger.addComment "Was unable to locate the data identifier in the metadata using any (common) property/predicate reserved for this purpose.  Tested SIO:is-about, SIO:0003323, schema:mainEntity, IAO:0000136, schema:codeRepository, and foaf:primaryTopic.  Sorry! "
		end
	end

	return @swagger.createEvaluationResponse
end


if debug
#	@input = '{"subject": "10.5281/zenodo.1147435"}'  # doi fail
	@input = '{"subject": "10.5281/zenodo.1065973"}'  # doi fail
#	@input = '{"subject": "BSYNRYMUTXBXSQ-UHFFFAOYSA-N"}' # inchi
#	@input = '{"subject": "LFQSCWFLJHTTHZ-UHFFFAOYSA-N"}' # another inchi
#	@input = '{"subject": "20.1000/105"}'  # handle (fail)
else 
	@input = $stdin.read
end


cgi = CGI.new

schemas = {'subject' => ['string', "the GUID being tested"]}

@swagger = Swagger.new({
			:title => "FAIR Metrics Gen2- Data Identifier Explicitly In Metadata",
			:description => "Metric to test if the metadata contains the unique identifier to the data. This is done by searching for a variety of properties, including foaf:primaryTopic, schema:mainEntity, sio:is-about, and iao:is-about. schema codeRepository is used for software releases.",
			:tests_metric => 'https://purl.org/fair-metrics/FM_F3',
			:applies_to_principle => "F3",
			:organization => 'FAIR Metrics Authoring Group',
			:org_url => 'http://fairmetrics.org',
			:responsible_developer => "Mark D Wilkinson",
			:email => 'markw@illuminae.com',
			:developer_ORCiD => '0000-0001-6960-357X',
			:protocol => 'http',
			:host => 'linkeddata.systems',
			:basePath => '/cgi-bin',
			:path => '/FAIR_Tests/gen2_data_identifier_in_metadata',
			:response_description => 'The response is a binary (1/0), success or failure',
			:schemas => schemas,
			:fairsharing_key_location => '../fairsharing.key',
			:debug => debug				 				 
})

if (!cgi.request_method or cgi.request_method == "GET") and !debug
        puts "Content-type: application/openapi+yaml;version=3.0\n\n"
        puts @swagger.getSwagger
elsif cgi.request_method == "POST" or debug
        input_json = JSON.parse(@input)
        guid = input_json["subject"]
        @swagger.testedGUID = guid
        response = testGUID
        puts "Content-type: application/json+ld\n\n"
        puts response
end
